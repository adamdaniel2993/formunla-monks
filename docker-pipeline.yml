trigger:
  branches:
    include:
    - dev
    - qa
    - staging
    - production
  paths:
    include:
    - formulatest/*
    - Dockerfile
    - docker-pipeline.yml


stages:

- stage: Dev
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
  variables:
  - group: dev_vg
  jobs:
  - job: BuildAndPush
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: 'Build and push an image to container registry'
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest

- stage: QA
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/qa'))
  variables:
  - group: qa_vg
  jobs:
  - job: BuildAndPush
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: 'Build and push an image to container registry'
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest

# - stage: Staging
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/staging'))
#   variables:
#   - group: Staging_Variables
#   jobs:
#   - job: BuildAndPush
#     pool:
#       vmImage: $(vmImageName)
#     steps:
#     - task: Docker@2
#       displayName: 'Build and push an image to container registry'
#       inputs:
#         command: buildAndPush
#         repository: $(imageRepository)
#         dockerfile: $(dockerfilePath)
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: |
#           $(tag)
#           latest

# - stage: Production
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/production'))
#   variables:
#   - group: Production_Variables
#   jobs:
#   - job: BuildAndPush
#     pool:
#       vmImage: $(vmImageName)
#     steps:
#     - task: Docker@2
#       displayName: 'Build and push an image to container registry'
#       inputs:
#         command: buildAndPush
#         repository: $(imageRepository)
#         dockerfile: $(dockerfilePath)
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: |
#           $(tag)
#           latest
